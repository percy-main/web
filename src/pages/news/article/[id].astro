---
import { getCollection } from "astro:content";
import Container from "@/layouts/Container.astro";
import { RichText } from "@/components/RichText";
import { formatDate, formatISO } from "date-fns";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { convert } from "html-to-text";
import LDJson from "@/components/LDJson.astro";
import { Breadcrumbs } from "astro-breadcrumbs";
import { IoChevronForward } from "react-icons/io5";

export async function getStaticPaths() {
  const pages = await getCollection("news");
  return pages.map((article) => ({
    params: { id: article.id },
    props: {
      article,
      description: convert(documentToHtmlString(article.data.summary)),
    },
  }));
}

const games = await getCollection("game");

const { article, description } = Astro.props;
---

<Container title={article.data.title} description={description}>
  <LDJson
    content={{
      "@type": "NewsArticle",
      headline: article.data.title,
      datePublished: formatISO(article.data.when),
    }}
    slot="ldjson"
  />

  <div
    class="text-h4 mb-4 [&_ol]:flex [&_ol]:items-center [&_ol]:gap-2 [&_ol>li]:flex [&_ol>li]:items-center [&_ol>li]:gap-2"
    slot="breadcrumbs"
  >
    <Breadcrumbs
      linkTextFormat="capitalized"
      customizeListElements={[
        { index: 0, remove: true },
        { index: 2, remove: true },
      ]}
      customizeLinks={[
        { index: 1, href: "/news/1" },
        { index: "last", text: article.data.title },
      ]}
    >
      <IoChevronForward slot="separator" />
    </Breadcrumbs>
  </div>

  <div class="flex flex-col gap-4 md:flex-row md:gap-8">
    <div class="grow">
      <a
        class="flex items-center space-x-4"
        href={`/person/${article.data.author.slug}`}
      >
        {
          article.data.author.photo && (
            <img
              class="h-14 w-14 rounded-full"
              src={article.data.author.photo.url}
              alt={article.data.author.photo?.title}
            />
          )
        }
        <span class="font-medium dark:text-white">
          {article.data.author.name}
        </span>
      </a>
      <p class="pb-4 text-sm text-gray-500">
        Published on {formatDate(article.data.when, "PPPP")}
      </p>
      <RichText
        client:load
        page={`news/article/${article.id}`}
        document={article.data.content}
        games={games.filter((g) => g.data.type === "game").map((g) => g.data)}
      />
    </div>
    <div class="min-w-min text-nowrap">
      <h5>Related Pages</h5>
      <ul>
        {
          article.data.pages.map((page) => (
            <li>
              <a href={page.slug} class="text-blue-600 hover:underline">
                {page.title}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</Container>
