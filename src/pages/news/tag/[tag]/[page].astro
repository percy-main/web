---
import type { GetStaticPathsOptions } from "astro";
import { getCollection } from "astro:content";
import _ from "lodash";
import NewsPage from "@/components/NewsPage.astro";
import Container from "@/layouts/Container.astro";
import { Breadcrumbs } from "astro-breadcrumbs";
import { IoChevronForward } from "react-icons/io5";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allNews = await getCollection("news");

  const tags = _.uniqBy(
    allNews.flatMap((n) => n.data.pages),
    (p) => p.id,
  ).map((tag) => ({
    ...tag,
    slug: tag.slug.replaceAll("/", "_"),
  }));

  const tagPages = _.groupBy(
    allNews.flatMap((n) =>
      n.data.pages.map((p) => ({
        ...n,
        tag: p.slug.replaceAll("/", "_"),
      })),
    ),
    (p) => p.tag,
  );

  return tags.flatMap((tag) => {
    const news = tagPages[tag.slug];

    return paginate(news, {
      pageSize: 5,
      params: {
        tag: tag.slug,
      },
      props: {
        tag,
        tags: tags.map((t) => ({
          ...t,
          count: tagPages[t.slug]?.length ?? 0,
          isActive: t.slug === tag.slug,
        })),
      },
    });
  });
}

const { page, tags, tag } = Astro.props;
---

<Container title="News">
  <div
    class="text-h4 mb-4 [&_ol]:flex [&_ol]:items-center [&_ol]:gap-2 [&_ol>li]:flex [&_ol>li]:items-center [&_ol>li]:gap-2"
    slot="breadcrumbs"
  >
    <Breadcrumbs
      linkTextFormat="capitalized"
      crumbs={[
        {
          text: "News",
          href: "/news/1",
        },
        {
          text: "Tag",
          href: "#",
        },
        {
          text: tag.title,
          href: `/news/tag/${tag.slug}/1`,
        },
      ]}
    >
      <IoChevronForward slot="separator" />
    </Breadcrumbs>
  </div>

  <NewsPage
    articles={page.data.map((article) => ({ id: article.id, ...article.data }))}
    page={page}
    tags={tags}
  />
</Container>
