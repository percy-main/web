---
import Container from "@/layouts/Container.astro";
import { urlMatch } from "../lib/util/url-match";

type MenuLink = {
  title: string;
  link: string;
};

type Props = {
  title: string;
  slug: string;
  menu?: { title: string; items: Array<MenuLink & { children: MenuLink[] }> };
};

const { title, menu, slug } = Astro.props;
const { pathname } = Astro.url;
---

<Container
  title={title}
  description=`Percy Main Cricket and Sports Club - ${title}`
>
  <slot slot="ldjson" name="ldjson" />
  <div class="flex flex-col md:flex-row">
    {
      menu && (
        <>
          <aside class="w-full sm:w-60 dark:bg-gray-50 dark:text-gray-800">
            <nav class="space-y-8 text-sm">
              <div class="space-y-2">
                <h3 class="dark:text-gray-600">
                  <a href={`/${slug}`}>{menu.title}</a>
                </h3>
                <div class="flex flex-col">
                  {menu.items.map(({ title, link, children }) => {
                    return (
                      <>
                        <a
                          href={link}
                          class="py-1"
                          class:list={[
                            urlMatch(pathname, {
                              url: link,
                              match: { start: link },
                            })
                              ? "border-gray-500 border-l-4 pl-2 text-bold text-orange-900"
                              : "",
                          ]}
                        >
                          {title}
                        </a>

                        <div class="flex flex-col ml-2">
                          {children.map(({ title, link }) => (
                            <>
                              <a
                                href={link}
                                class="py-1"
                                class:list={[
                                  urlMatch(pathname, {
                                    url: link,
                                    match: { start: link },
                                  })
                                    ? "border-gray-500 border-l-4 pl-2 ml-[-0.5rem] text-bold text-orange-900"
                                    : "",
                                ]}
                              >
                                <span
                                  class:list={
                                    urlMatch(pathname, {
                                      url: link,
                                      match: { start: link },
                                    })
                                      ? ["pl-2"]
                                      : []
                                  }
                                >
                                  {title}
                                </span>
                              </a>
                            </>
                          ))}
                        </div>
                      </>
                    );
                  })}
                </div>
              </div>
            </nav>
          </aside>
          <hr class="md:hidden pt-4 pb-4" />
        </>
      )
    }
    <div class="flex flex-col grow">
      <slot />
    </div>
  </div>
</Container>
