---
import { getCollection } from "astro:content";
import Logo from "@/components/Logo.astro";
import { MenuItem, type TMenuItem } from "@/components/MenuItem";
import { AuthNav } from "@/components/auth/Nav";
import { urlMatch } from "@/lib/util/url-match";
import { paymentData } from "@/lib/payments/config";

const { pathname } = Astro.url;

const pages = await getCollection("page");
const pagesMenu = pages
  .filter((page) => page.data.isMainMenu)
  .sort((a, b) => (a.data.menuOrder ?? 0) - (b.data.menuOrder ?? 0))
  .map((page) => ({
    name: page.data.title,
    url: `/${page.data.slug}`,
    match: {
      start: `/${page.data.slug}`,
    },
    purpose: "menu" as const,
  }));

const menu: Array<TMenuItem & { purpose: "cta" | "menu" }> = [
  {
    name: "Home",
    url: "/",
    match: "exact",
    purpose: "menu",
  },
  {
    name: "News",
    url: "/news/1",
    match: {
      start: "/news",
    },
    purpose: "menu",
  },
  {
    name: "Calendar",
    url: "/calendar",
    match: {
      start: "/calendar",
    },
    purpose: "menu",
  },
  {
    name: "People",
    url: "/person",
    match: {
      start: "/person",
    },
    purpose: "menu",
  },
  ...pagesMenu,
  {
    name: "Donate Now",
    url: `/purchase/${paymentData.prices.donation}`,
    match: "never",
    purpose: "cta",
  },
];
---

<header
  class="to-creamy sticky top-0 z-50 bg-linear-to-t from-blue-100 py-6 pl-[calc(100vw-100%)] shadow-[0_-28px_60px_10px_rgba(102,102,102,1)] transition-all duration-300"
>
  <nav class="relative container flex flex-wrap items-center justify-between">
    <div class="flex flex-row items-center gap-4">
      <div class="order-0">
        <Logo />
      </div>

      <h1 class="text-h4 mb-0 hidden lg:block">
        Percy Main Community Sports Club
      </h1>
    </div>

    <input id="nav-toggle" type="checkbox" class="peer hidden" />
    <label
      for="nav-toggle"
      class="order-2 flex cursor-pointer items-center peer-checked:hidden lg:order-1 lg:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <label
      for="nav-toggle"
      class="order-2 hidden cursor-pointer items-center peer-checked:flex lg:order-1 lg:peer-checked:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>

    <ul
      class="order-3 hidden w-full text-center peer-checked:block lg:order-1 lg:flex lg:w-auto lg:space-x-2 lg:text-left lg:peer-checked:flex"
    >
      {
        menu.map(({ purpose, ...item }) => (
          <li>
            <MenuItem
              item={item}
              purpose={purpose}
              isActive={urlMatch(pathname, item)}
            />
          </li>
        ))
      }
      <li>
        <AuthNav client:load pathname={pathname} />
      </li>
    </ul>
  </nav>
</header>
