---
import { getCollection } from "astro:content";
import Logo from "./Logo.astro";
const { pathname } = Astro.url;

const urlMatch = (pathname: string, item: MenuItem) => {
  if (typeof item.match === "string") {
    return pathname === `${item.url}/` || pathname === item.url;
  }

  return pathname.startsWith(item.match.start);
};

const pages = await getCollection("page");
const pagesMenu = pages
  .filter((page) => page.data.isMainMenu)
  .map((page) => ({
    name: page.data.title,
    url: `/${page.data.slug}`,
    match: {
      start: `/${page.data.slug}`,
    },
  }));

type MenuItem = {
  name: string;
  url: string;
  match: { start: string } | "exact";
};

const menu: MenuItem[] = [
  {
    name: "Home",
    url: "/",
    match: "exact",
  },
  {
    name: "News",
    url: "/news/1",
    match: {
      start: "/news",
    },
  },
  ...pagesMenu,
];
---

<header class="sticky top-0 z-50 py-6 transition-all duration-300">
  <div class="backdrop"></div>
  <div class="backdrop-edge"></div>
  <nav class="relative flex flex-wrap items-center justify-between container">
    <div class="flex flex-row items-center gap-4">
      <div class="order-0">
        <Logo />
      </div>

      <h1 class="text-h3 hidden lg:block mb-0">
        Percy Main Cricket and Sports Club
      </h1>
    </div>

    <input id="nav-toggle" type="checkbox" class="hidden peer" />
    <label
      for="nav-toggle"
      class="order-2 flex cursor-pointer items-center lg:order-1 lg:hidden peer-checked:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
    </label>
    <label
      for="nav-toggle"
      class="order-2 hidden cursor-pointer items-center lg:order-1 peer-checked:flex peer-checked:lg:hidden"
    >
      <svg class="h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"></polygon>
      </svg>
    </label>

    <ul
      class="text-center lg:text-left order-3 hidden w-full lg:order-1 lg:flex lg:w-auto lg:space-x-2 peer-checked:block peer-checked:lg:flex"
    >
      {
        menu.map((item) => (
          <li>
            <a
              href={item.url}
              class="p-3 py-2 text-[15px] text-dark transition hover:text-primary md:px-2 inline-block lg:block"
            >
              {item.name}
            </a>
            {urlMatch(pathname, item) && (
              <div class="left-2 right-2 h-0.5 bg-gradient-to-tl from-green-400 to-blue-400" />
            )}
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<style>
  header {
    --thickness: 4px;
    position: sticky;
    top: 0;
    /*
        Very opaque, for unsupported browsers.
        Overwritten in the feature queries below.
      */
    background: hsl(0deg 0% 100% / 0.95);
  }

  /*
      This code gets applied for folks using
      browsers that support backdrop-filter.
    */
  @supports (backdrop-filter: blur(16px)) or
    (-webkit-backdrop-filter: blur(16px)) {
    header {
      background: hsl(0deg 0% 100% / 0.5);
    }

    .backdrop {
      position: absolute;
      inset: 0;
      /*
          These prefixed properties are usually
          added automatically by tooling:
        */
      -webkit-backdrop-filter: blur(16px);
      backdrop-filter: blur(16px);
      background: linear-gradient(to bottom, hsl(0deg 0% 95%), transparent 50%);
      pointer-events: none;
    }

    .backdrop-edge {
      position: absolute;
      left: 0;
      right: 0;
      bottom: 0;
      height: var(--thickness);
      background: hsl(0deg 0% 100% / 0.1);
      -webkit-backdrop-filter: blur(12px) brightness(0.96);
      backdrop-filter: blur(12px) brightness(0.96);
      transform: translateY(100%);
      pointer-events: none;
    }
  }

  /*
      This code gets applied for folks using
      browsers that support mask-image. This
      adds the "consider near elements"
      optimization discussed in this article.
    */
  @supports (mask-image: none) or (-webkit-mask-image: none) {
    .backdrop {
      height: 200%;
      -webkit-mask-image: linear-gradient(
        to bottom,
        black 0% 50%,
        transparent 50% 100%
      );
      mask-image: linear-gradient(
        to bottom,
        black 0% 50%,
        transparent 50% 100%
      );
    }
    .backdrop-edge {
      height: 100%;
      inset: 0;
      -webkit-mask-image: linear-gradient(
        to bottom,
        black 0,
        black var(--thickness),
        transparent var(--thickness)
      );
      mask-image: linear-gradient(
        to bottom,
        black 0,
        black var(--thickness),
        transparent var(--thickness)
      );
    }
  }
</style>
